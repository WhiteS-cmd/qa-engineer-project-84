# 1. Функциональные Пользователь должен иметь возможность искать товары по ключевому слову или категории (по категориям)
summary:  | 
Проверка поиска товаров по категориям
requirement:  | 
Система должна находить товары по выбранной категории
prerequisites:  |
Пользователь находится на главной странице интернет-магазина
В каталоге существуют товары разных категорий
test-data:  |
Категории: "furniture"
steps:
- Навести курсор на меню "Category"
- В выпадающем меню выбрать категорию "furniture"
expected-result:  |
В результатах поиска отображается товары категории "furniture"

# 2. Функциональные Пользователь должен иметь возможность искать товары по ключевому слову или категории (по ключевому слову)
summary: | 
Проверка поиска товаров по ключевому слову
requirement: | 
Система должна находить товары по ключевому слову
prerequisites: 
Пользователь находится на главной странице интернет-магазина
Система настроена для фильтрации товаров по ключевым словам
test-data: | 
Ключевые слова "Mascara", "Milk", "Сoffe", "Potatoes"
steps:
- Ввести один из ключевых запросов "Mascara", "Milk", "Сoffe", "Potatoes"
- Система фильтрует товары по ключевому слову и отображает результат на текущей странице
expected-result: | 
В результатах поиска отображается товары категории по ключевому слову  "Mascara", "Milk", "Сoffe", "Potatoes", "Gucci"

# 3. Функциональные Пользователь должен иметь возможность фильтровать товары (по цене)
Summary: | 
Проверка работы фильтрации товаров по диапазону цен
Requirement: |  
Система должна предоставлять возможность фильтрации товаров по заданному диапазону цен
Prerequisites: | 
Пользователь находится на главной странице интернет-магазина
В системе присутствует возможность фильтрации товаров по цене
Каталог содержит товары с разной стоимостью
Test-data: | 
Диапазон цен от 0 до 6577.499
Steps:
- Пользователь вводит значения в фильтр "Price"
- Вводит диапазон цен от 0 до 6577.499
- Система обновляет результаты каталога
Expected-result: | 
В результате фильтрации отображаются товары, соответствующие установленному диапазону цен

# 4. Функциональные Пользователь должен иметь возможность фильтровать товары (по цене)
Summary: | 
Проверка работы фильтрации товаров по недопустимому диапазону цен
Requirement: | 
Система должна обрабатывать ошибки некорректного ввода при фильтрации товаров по ценам
Prerequisites: | 
Пользователь находится на главной странице интернет-магазина
В системе присутствует возможность фильтрации товаров по цене
Каталог содержит товары с разной стоимостью
Test-data: | 
Диапазон цен
Нижняя граница больше верхней от 1000 до 500
Зачения не являются числами "Abc" или специальными символами "@#@$#"
Steps:
- Пользователь вводит значения в фильтр "Price"
- Пример 1 Нижняя граница = 1000, Верхняя граница = 500
- Пример 2 Нижняя граница = “abc”, Верхняя граница = “@$#”
- Пример 3 Нижняя граница = -500, Верхняя граница = -50
- Пример 4 Нижняя граница = 1, Верхняя граница = 9999999999
Expected-result: | 
Пример 1 Система выводит ошибку о том, что "Нижняя граница больше верхней"
Пример 2 Система выводит ошибку о том, что "Цены должны быть числовыми значениями"
Пример 3 Система выводит ошибку о том, что "Цены не могут быть отрицательными"
Пример 4 Система выводит ошибку о том, что "Указанное значение вызодит за пределы возможного диапозона цен"

# 5. Функциональные Пользователь должен иметь возможность просматривать товары и просматривать подробную информацию о товаре
summary: | 
Проверка отображения товаров в каталоге и корректного отображения подробной информации о выбранном товаре
requirement: | 
Система должна предоставлять возможность просмотра каталога просмотров и информацию о конкретном товаре       
prerequisites: | 
Пользователь находится на главной странице интернет-магазина
В системе есть доступные товары, отображаемые в каталоге
Каждый товар имеет подробную информацию
test-data: | 
Каталог содержит содержит минимум 1 товара в каждой категории с полной информацией о них 
steps:
- На странице каталога, пользователь нажимает на любой товар, чтобы посмотреть подробности
- Система открывает страницу выбранного товара
- На странице отображается изображение товара
- Название товара
- Полный текст описания
- Цена
- Дополнительная информация
expected-result: | 
Система открывает страницу выбранного товара
Вся информация по выбранному товару отображается корректно и полно

# 6. Функциональные Требование Пользователь должен иметь возможность добавлять товары в корзину и просматривать содержимое корзины
summary: | 
Проверка возможности добавления товара в коризну и просмотра содержимого корзины 
requirement: | 
Система должна предоставлять возможность добавления товара в корзину и его просмотра
prerequisites: | 
Пользователь находится на главной странице интернет-магазина
В каталоге на главной странице у каждого товара есть кнопка для добавления товара в корзину
В системе есть как минимум один доступный товар в каждой категории
test-data: | 
В каждой категории товара есть возможность добавить товар в корзину
steps: 
- На странице каталога, пользователь добавляет себе в корзину товар при помощи кнопки "Add to cart"
- Система добавляет товар в корзину
- Пользователь нажимает на иконку корзины, подписаной как "Cart"
- Система открывает корзину
- В корзине отображаются добавленные товары 
expected-result: | 
При нажатии кнопки "Add to cart", выбранный товар успешно добавляется в корзину
В корзине отображаются товар с корректными данными
Название товара
Цена товара
Количество
Корзина должна отображать итоговую стоимость всех добавленных товаров 

# 7. Нефункциональные Требование Сайт нужно разработать с учетом удобства использования и оптимизировать для скорости работы

summary: | 
Проверить, как главная страница веб-сайта отображается на различных устройствах (десктоп, планшет, мобильный телефон)
requirement: | 
Главная страница должна адаптироваться под все поддерживаемые размеры экрана (дизайн должен быть отзывчивым)
prerequisites: | 
Установлены эмуляторы мобильных устройств (например, встроенные функции Chrome DevTools)
Разработан веб-сайт с функциональной главной страницей.
test-data: |  
Устройства
Десктоп (разрешение экрана 1920x1080)
Планшет (разрешение 768x1024)
Мобильный телефон (разрешение 360x640)
Devtools
steps: 
- Открыть сайт на десктопе с настроенным разрешением 1920x1080
- Проверить расположение основных элементов (логотип, меню, кнопки, текст) на экране десктопа
- Изменить разрешение до 768x1024 (эмуляция планшета)
- Проверить, как перестраивается интерфейс согласно меньшему разрешению
- Установить разрешение 360x640 (эмуляция мобильного телефона)
- Изучить расположение элементов и взаимодействие на мобильном устройстве

expected-result: | 
На десктопе все элементы пользовательского интерфейса хорошо видны, не накладываются друг на друга.
На планшете интерфейс подстраивается под меньшее разрешение, элементы компонуются логично (например, горизонтальное меню становится вертикальным).
На мобильном телефоне интерфейс корректно отображается шрифт остается читаемым, кнопки удобно кликабельны, страница хорошо прокручивается.

# 8. Нефункциональные Требование Сайт нужно разработать с учетом удобства использования и оптимизировать для скорости работы
Summary: |  
Проверить читабельность текста на сайте, включая размер шрифта, контраст и общую структуру
Requirement: |  
Текст должен быть визуально читаемым для пользователей
Prerequisites: | 
Полностью работающая версия сайта
Test-data: | 
Разделы сайта Магазин, Корзина, раздел выбора языка
Steps:
- Открыть сайт и перейти на любую страницу с текстом (например, "Магазин")
- Проверить размер шрифта основного текста
- Проверить читаемость текста на фоне
Expected-result: | 
Все стандартные тексты легко читаются, шрифт не вызывает нагрузки на глаза
Текст имеет достаточный контраст с фоном сайта
Нет наложений текста на изображения или другие блоки

# 9. Нефункциональные Требование Сайт нужно разработать с учетом удобства использования и оптимизировать для скорости работы
Summary: |  
Убедиться, что все чекбоксы в каталоге имеют подписи
Requirement: | 
Каждый чекбокс должен быть подписан, а текст должен быть читаем и понятен пользователю
Prerequisites: | 
Доступ к каталогу сайта с чекбоксами
Test-data: | 
Открытый рабочий сайт с доступом к выбору чек-боксов
Steps:
Зайти в раздел каталога, где расположены чекбоксы
Взглянуть на все доступные чекбоксы на странице
Проверить, присутствует ли текстовая подпись рядом с каждым чекбоксом
Убедиться, что подпись указывает, за какую функцию/фильтр отвечает чекбокс
Находится рядом с чекбоксом и доступно читается
Проверить доступность чекбоксов для нажатия
Expected Result: | 
У каждого чекбокса есть четкая, объясняющая его функцию подпись
Расположение подписи и чекбокса логичное и не вызывает затруднений при использовании

# 10. Нефункциональные Требование Сайт нужно разработать с учетом удобства использования и оптимизировать для скорости работы
Summary: | 
Проверка корректности отображения русскоязычной версии сайта
Requirement: |  
Сайт должен корректно отображать весь контент на русском языке, включая элементы интерфейса, заголовки, тексты, кнопки и сообщения
Prerequisites: | 
Тестируемый сайт доступен для проверки
Установлены инструменты для измерения скорости загрузки
Доступ к устройствам с различной производительностью (телефоны, планшеты, ПК)
Интернет с различностью скоростью
Test Data: | 
 Используемый язык русский (Russian)
Steps:
- Окрыть сайт, проверить установку русского языка
- Осмотреть разделы и элементы интерфейса на правильность перевода и работоспособность
- Убедиться в отсутствии ошибок перевода и корректной функциональности
- Сравнить работу русской версии с английской на разных устройствах
- Проверить переключение языков
Expected Result: | 
Все элементы интерфейса и текстовые блоки отображаются на русском языке
Тексты переведены корректно и идентичны по смыслу оригинальному контенту
Русская версия сайта полностью идентична функциональной и визуальной части английской версии


# 11. Нефункциональные Требование Сайт нужно разработать с учетом удобства использования и оптимизировать для скорости работы
Summary: | 
Проверить скорость загрузки сайта и его производительность при различных условиях, включая тип устройства, скорость интернета и браузер
Requirement: | 
Сайт должен загружаться за приемлемое время (допустим, не более 3 секунд при стандартном соединении). Все ресурсы должны подгружаться корректно без ошибок
Prerequisites: | 
Полностью рабочая версия сайта.
Инструменты для измерения производительности (например, Lighthouse, PageSpeed Insights или DevTools).
Доступ к устройствам с разными характеристиками (например, мобильный телефон, ПК).
Возможность эмуляции различных скоростей интернета (например, Fast 3G, Slow 3G).
Test-data: | 
Тестовые страницы Главная страница, страницы разделов "Магазин" и "Контакты".
Используемые устройства смартфон (бюджетное устройство с ограниченной производительностью), современный ПК.
Тестируемые скорости сети Wi-Fi (5 Мбит/с), Fast 3G (1.6 Мбит/с).
Steps:
- Открыть сайт на компьютере с высокой производительностью и стабильным интернетом Wi-Fi
- Измерить время загрузки главной страницы до полной видимости всех элементов 
- Повторить тест для разделов "Магазин" и "Корзина"
- Ограничить скорость соединения до "Fast 3G" через инструменты разработчика и повторить тест на всех страницах. Замерить время загрузки и исправность загрузки функциональных элементов
- Протестировать сайт на смартфоне с низкой производительностью
- На стабильном Wi-Fi
- На "Fast 3G"
Expected-result: | 
Время полной загрузки страницы не превышает 3 секунд на Wi-Fi и 5 секунд на 3G
Все ключевые элементы страницы отображаются корректно
Анимации и переходы между страницами работают плавно
Ошибок загрузки нет

# 12. Нефункциональные Требование Сайт должен быть безопасным и защищать данные пользователя
Summary: | 
Проверка безопасности HTTPS-сертификата веб-сайта 
Prerequisites: | 
Веб-сайт должен быть безопасным, защищать передаваемые данные пользователей и минимизировать риски утечек данных.
Test-data: | 
Доступ к тестируемому сайту 
Наличие HTTPS-сертификата для проверки безопасноти передачи данных 
Steps:
- Открыть веб-сайт
- Проверьте наличие зеленого замка в адресной строке браузера, указывающего на защищенное соединение
- Выполнить попытку открыть сайт через протокол HTTP (вручную ввести http вместо https) и убедиться, что происходит перенаправление на HTTPS или сайт блокируется.
Expected-result: | 
Сайт работает только через HTTPS, а передачи данных через HTTP не допускаются



# 13. Нефункциональные Требование Сайт должен быть безопасным и защищать данные пользователя
Summary: | 
Проверка веб-сайта на XSS-уязвимости 
Prerequisites: | 
Любые некорректные данные (например, XSS-код) отклоняются сервером без видимой ошибки для пользователя
Test-data: | 
Доступ к тестируемому сайту
Небезопасные данные для проверки устойчивости сайта к атакам
Данные для ввода в текстовые поля
Steps:
- Открыть веб-сайт
- Введите в любое поле, принимающее текстовые данные, скрипт (например, <script>alert('XSS')</script>)
- Отправьте форму и проверьте, исполняется ли JavaScript-код на странице после отправки
Expected-result: | 
Любые некорректные данные (например, XSS-код) отклоняется сервером без видимой ошибки для пользователя

# 14. Нефункциональные Требование Сайт должен иметь мобильную версию
Summary: | 
Сайт должен иметь корректно работающую мобильную версию, которая адаптируется под различные разрешения экранов мобильных устройств.
Prerequisites: | 
Стабильный доступ к тестируемому сайту
Мобильные устройства с разными операционными системами (Android/iOS)
Эмуляторы мобильных устройств
Браузеры, доступные на мобильных устройствах (Chrome, Safari, Firefox)
Тестовые данные
Test-data: | 
iPhone 12 mini - devtools
Steps:
- Открыть сайт на компьютере с помощью эмуляторов мобильных устройств (например, Chrome → Инструменты разработчика → Эмуляция устройства).
- Проверить, адаптируется ли сайт под разные размеры экрана
- Проверить отображение контента 
- Убедиться, что все элементы читаемы и соответствуют размеру экрана
- Функциональность кнопок 
- Проверить горизонтальное и вертикальное отображение сайта
- Убедиться, что меню, кнопки и другие интерактивные элементы масштабируются для удобного управления пальцем
- Проверить плавность работы сайта на мобильных устройствах
- Прокрутка страницы
- Раскрытие выпадающих меню и функциональных блоков
- Проверить производительность сайта на низкоскоростном соединении или симуляции его отсутствия 
- Убедиться, что элементы пользовательского интерфейса открываются правильно.
Expected-result: | 
Сайт корректно адаптируется к различным экранам мобильных устройств
Контент отображается полностью, не имея обрезанных частей или нарушений вёрстки
Все кнопки, меню и функциональные элементы работают корректно
Производительность сайта на мобильных устройствах приемлемая
Все графические элементы не нарушают общий стиль сайта
HTTPS-соединение активно, и данные защищены

# 15. Нефункциональные Требование Сайт нужно протестировать на совместимость с последними версиями браузеров
Summary: | 
Проверка совместимости сайта с последней версией Google Chrome
Prerequisites: | 
Установлена последняя стабильная версия Google Chrome
Компьютер/устройство подключено к интернету
Тестируемый сайт доступен для проверки
Test-data: | 
Доступ к тестируемому сайту 
Steps:
- Запустить Google Chrome
- Перейти по URL-адресу тестируемого сайта
- Убедиться, что главная страница загружается корректно и отображается в полной мере (без ошибок загрузки)
- Проверить отображение элементов интерфейса
- Шапка, меню, логотип
- Основной контент
- Перейти в разделы сайта и убедиться, что все переходы работают корректно
- Если сайт содержит формы, заполнить и отправить их, проверить корректность работы
Expected-result: | 
Сайт должен корректно работать в Google Chrome все элементы интерфейса отображаются корректно, функционал не вызывает ошибок или сбоев, логика работы сайта совпадает с ожидаемым поведением.

# 16. Нефункциональные Требование Сайт нужно протестировать на совместимость с последними версиями браузеров
Summary: | 
Проверка совместимости сайта с последней версией Safari
Prerequisites: | 
Установлена последняя стабильная версия Safari
Компьютер/устройство подключено к интернету
Тестируемый сайт доступен для проверки
Test-data: |
Доступ к тестируемому сайту 
Steps:
- Запустить Safari
- Перейти по URL-адресу тестируемого сайта
- Убедиться, что главная страница загружается корректно и отображается в полной мере (без ошибок загрузки)
- Проверить отображение элементов интерфейса
- Шапка, меню, логотип
- Основной контент
- Перейти в разделы сайта и убедиться, что все переходы работают корректно
- Если сайт содержит формы, заполнить и отправить их, проверить корректность работы
Expected-result: | 
Сайт должен корректно работать в Safari все элементы интерфейса отображаются корректно, функционал не вызывает ошибок или сбоев, логика работы сайта совпадает с ожидаемым поведением.

# 17. Нефункциональные Требование Сайт нужно протестировать на совместимость с последними версиями браузеров
Summary: |
 Проверка совместимости сайта с последней версией Firefox
Prerequisites: |
Установлена последняя стабильная версия Firefox
Компьютер/устройство подключено к интернету
Тестируемый сайт доступен для проверки
Test-data: |
Доступ к тестируемому сайту 
Steps:
- Запустить Firefox
- Перейти по URL-адресу тестируемого сайта
- Убедиться, что главная страница загружается корректно и отображается в полной мере (без ошибок загрузки)
- Проверить отображение элементов интерфейса
- Шапка, меню, логотип
- Основной контент
- Перейти в разделы сайта и убедиться, что все переходы работают корректно
- Если сайт содержит формы, заполнить и отправить их, проверить корректность работы
Expected-result: |
Сайт должен корректно работать в Firefox все элементы интерфейса отображаются корректно, функционал не вызывает ошибок или сбоев, логика работы сайта совпадает с ожидаемым поведением.

# 18. Нефункциональные Требование Важно, чтобы сайт мог обрабатывать большое количество трафика
Summary: | 
Оценить работу сайта под выосокой нагрузкой 
Prerequisites: |
Сайт доступен
Инструмент нагрузочного тестирования (например, JMeter) настроен
Цель нагрузки 10 000 одновременных пользователей
Время отклика не должно превышать 2 секунды для 95% запросов
Test-data: |
Нет данных
Steps:
- Настроить нагрузочную модель с увеличением числа пользователей до 10 000
- Запустить тест на выбранном инструменте
- Зафиксировать результаты  время отклика, число ошибок
Expected-result: |
Сайт обрабатывает загрузку без сбоев, время отклика у 95% запросов ≤ 2 секунд

# 19. Нефункциональные Требование Сайт должен быть доступен на различных устройствах
Summary: |
Проверить доступность и корректность работы сайта на устройствах с iOS, Android, Windows/macOS
Prerequisites: |
Смартфоны, планшеты, ПК с разными ОС
Доступ к браузерам 
Стабильный интернет 
Test-data: |
iPhone 
iPad 
Android 
планшет
ПК
Steps:
- Открыть сайт на выбранных устройствах и браузерах
- Проверить загрузку, адаптивность и отображение элементов интерфейса
- Убедиться в корректности работы функций (навигация, кнопки, формы)
- Протестировать масштабирование и отзывчивость
Expected-result: |
Сайт корректно отображается и функционирует на всех устройствах 

# 20. Неявные Поиск должен быть удобным, быстрым и с релевантной выдачей результатов
Summary: |
Проверка быстродействия и релевантности поиска при вводе ключевых слов "Брендов"
Prerequisites: |
Сайт доступен
На сайте есть индексированные товары с осмысленными названиями и характеристиками
Test-data: |
Ключевые слова для поиска: "Coca-Cola", "Nescafe", "Whey".
Наличие релевантных товаров на сайте для заданных ключевых слов
Steps:
- Открыть вкладку поиска на сайте
- Ввести один из ключевых запросов
- Нажать на кнопку "Поиск" либо дождаться пока система отфильтрует
- Замерить время отклика системы до выдачи результатов.
- Проверить, что результаты поиска соответствуют введенному запросу
Expected-result: |
Поиск возвращает результаты за ≤ 1 секунду для каждого запроса, в первых позициях отображаются релевантные товары. Автоподсказки ведут к корректным категориям или конкретным товарам.

# 21. Неявные При поиске и фильтрации товаров интерфейс должен быть интуитивно понятным.
Summary: |
Оценка удобства пользования фильтрами в результатах поиска.
Prerequisites: |
Сайт доступен.
В категории поиска найдены товары для применения фильтров.
Test-data: |
Пример: Пользователь ищет ноутбук определенного бренда в цене от 1500 до 2000
Тестовые товары: телефоны брендов (Apple, ASUS, Huawei), с разной ценой.
Steps:
- Выполнить поиск по ключевому запросу "Apple".
- В панели фильтров выбрать бренд "Apple".
Задать диапазон цены от 1500 до 2000.
Проверить результаты: отображаются только товары бренда "Apple", попадающие в заданные параметры.
Убедиться в возможности очищения фильтров одной кнопкой.
Expected-result: |
Фильтры работают корректно. Выводятся только товары, соответствующие выбранным условиям. После снятия фильтров отображаются все результаты поиска.

# 22. Неявные  Страницы с подробной информацией о товаре должны включать такие данные, как описание, фотографии, цена и отзывы.
Summary: |
Проверка, что страница товара содержит все необходимые элементы информации.
Prerequisites: |
Сайт доступен.
На сайте представлены товары с описаниями, загруженными фотографиями
Test-data: |
Пример: товар "New DELL XPS 13 9300 Laptop"
Steps:
- Найти товар "New DELL XPS 13 9300 Laptop" через поиск.
- Открыть страницу товара.
- Проверить наличие элементов
- Название продукта.
- Фото товара (минимум 3 изображение)
- Текстовое описание товара
- Текущая цена товара
- Раздел с отзывами пользователей
- Перейти в раздел отзывов и проверить видимость пользовательских отзывов
Expected-result: |
На странице товара отображаются название, фотографии высокого качества, актуальная цена, подробное описание и отзывы

# 23. Неявные Корзина должна сохранять товары, даже если пользователь обновляет страницу или закрывает браузер.
Корзина должна сохранять товары даже после обновления страницы или закрытия браузера
Summary: |
Проверка сохранности данных в корзине после обновления или повторного открытия сайта.
Prerequisites: |
Сайт доступен.
Функционал добавления в корзину работает корректно.
Test-data: |
Пример товаров "Powder Canister", "Calvin Klein CK One".
Steps:
- Найти и добавить в корзину два товара "Powder Canister" и "Calvin Klein CK One".
- Перейти в корзину и убедиться, что добавленные товары отображаются.
- Закрыть вкладку сайта
- Открыть браузер заново, зайти на сайт и открыть корзину
- Убедиться, что ранее добавленные товары все еще отображаются
- Обновить страницу и зафиксировать состояние корзины
Expected-result: |
Товары в корзине сохраняются после обновления страницы и перезапуска браузера

# 24. Неявные В корзине должна быть информация о стоимости товаров, общей сумме и возможности изменения количества товаров или удаления их
Summary: |
Проверка отображения и возможности управления товарами в корзине
Prerequisites: |
Сайт доступен
Функционал добавления в корзину работает корректно
Test-data: |
Пример товаров "Red Lipstick", "Dior J'adore".
Steps:
- Добавить в корзину два товара, указанных в тестовых данных.
- Перейти в корзину.
- Проверить отображение
- Названий товаров.
- Цен за штуку.
- Суммарной стоимости.
- Изменить количество товара
- Убедиться, что сумма изменилась
- Удалить товар из корзины и проверить обновление суммы.
Expected-result: |
В корзине корректно отображается название, стоимость и общая сумма товаров. Изменение количества товаров и их удаление корректно пересчитывают итоговую сумму.
